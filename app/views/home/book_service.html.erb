<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
<title>New Services</title>
<%= javascript_include_tag 'application' %>
<script src="https://maps.google.com/maps/api/js?libraries=geometry,places,drawing&key=AIzaSyD3FGfnc2no3EslsMiWWInbvbQeypNgjTk" type="text/javascript"></script>
<%= stylesheet_link_tag "application", media: "all", 'data-turbolinks-eval' => false %>
</head>
<body class="page-bg" style="padding-top: 0px;">
<%= form_for(@subscription, :url => new_service_path, :html => { :onsubmit => "return subscription_validate()" }) do |f| %>
  <div class="page-container01">
    <div class="col-md-9 white-bg no-padding">
      <div class="pane-header">
    	<div class="pull-right header-navigation">
          <a href="#">+1(646)681-3626</a>
          <a href="#">INFO@SNAPFOURSERVICE.COM</a>
          <a href="<%= root_path %>" class="btn login-button">Login</a>
        </div>
      </div>        
      <div class="pane-header">
        <h4> Information </h4>
      </div>
      <% if @subscription.errors.any? %>
        <div id="error_explanation" class="alert alert-danger">
          <h2><%= pluralize(@subscription.errors.count, "error") %> prohibited this customer from being saved:</h2>
          <ul>
            <% @subscription.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>
      <div class="panel-body">
          <div class="col-md-2l-md-12">
            <p>Please provide the address of the location you want services for.<br />
            On the map you will find a tool to calculate the size of your property</p>
            <div class="form-group">
              <div class="icon-addon addon-lg">
                <input type="text" id="map_address" placeholder="Address" onkeydown="if (event.keyCode == 13) return false">
              </div>
            </div>
            <div>
              <title>Drawing Tools</title>
              <div id="panel"></div>
              <div id="map"></div>
            </div>
            <div class="row">
              <div class="col-md-6">Area: <span id="area_in_sq_f"></span> feet, <span id="area_in_acre"></span> acres</div>
              <%= f.fields_for :location, Location.new do | location| %>
                <%= location.hidden_field :name, class: "location_name", value: "test_name"%>
                <%= location.hidden_field :address, class: "location_address", value: 0 %>
                <%= location.hidden_field :city, class: "location_city" %>
                <%= location.hidden_field :state, class: "location_state" %>
                <%= location.hidden_field :country, class: "location_country" %>
                <%= location.hidden_field :latitude, class: "location_latitude" %>
                <%= location.hidden_field :longitude, class: "location_longitude" %>
                <%= location.hidden_field :zip, class: "location_zip" %>
                <%= location.hidden_field :area_in_acres, class: "feet_hidden_field", value: 0 %>
                <%= location.hidden_field :area_in_feet, class: "area_hidden_field", value: 0 %>
                <%= location.hidden_field :map_url, class: "map_url_hidden_field" %>
              <% end %>
              <div class="col-md-6 text-right"> 
                  <a href="javascript:void(0);" class="btn btn-small" id="clear_marker">Clear Markers</a> 
              </div>
            </div>
        </div>
        <div class="pane-header">
          <h4> Your plan </h4>
        </div>
      <div class="panel-body">
        <p>The landscaping plan consists on the following services. You can <br />
        choose the frequency that better fits your needs</p>
        <ul class="font-bold">
          <li>Mowing Fine Lawn Areas</li>
          <li>Trimming all turf borders as necessary</li>
          <li>Cleaning all landscape areas of liter & debris</li>
          <li>Cleaning all paved areas of clippings & debris</li>
        </ul>
        <h1 class="head">Time span and frequency</h1>
        <p>Select the minimum plan term that you want to sign up <br />
        for. The frequency will only apply for this plan.</p>
      
        <div class="tab-holder">
          <ul class="nav nav-pills">
            <%= f.hidden_field :plan_id, id: "plan", value: Plan.first.id %>
            <% Plan.all.each do |plan| %>
              <li id="service_plan">
                <a href="javascript:void(0);" class="tab" onclick="set_plan(<%= plan.id %>, this);" data-plan-id="<%= plan.id %>" id=plan_<%= plan.id %>><%= plan.name %></a>
              </li>
            <% end %>
          </ul>
        </div>
        <div> 
          <!-- Tab panes -->
          <div class="tab-content">
            <div class="plan">
              <div class="col-md-12">
                <%= f.hidden_field :sub_plan_id, id: "sub_plan", value: Subplan.first.id %>
                
                <% Subplan.all.order("id").each do |subplan| %>
                  <div id="subplan_<%= subplan.id %>" 
                       class="subplan <%= "#{subplan.plan.name.downcase}-#{subplan.name.downcase.gsub(/\s/, '-')}" %>" 
                       subplan_for="<%= subplan.plan_id %>" style="display: none;">
                    <div class="col-md-4 plan-holder <% if subplan.name == 'Trial' %>col-xs-offset-2<% end %>">
                      <h2 class="no-margin">
                        <%= subplan.name %>
                          <% if subplan.name == 'Seasonal' %>
                            <i class="fa fa-star star-yellow" aria-hidden="true"></i>
                          <% end %>  
                      </h2>
                      <div class="plan-service">
                          <strong>
                            <%= subplan.get_sub_plan_month %> <%= subplan.get_sub_plan_month == 1 ? "Month" : "Months" %>  
                          </strong>
                      </div>
                      <div>
                          <span class="plan-price">$<%= subplan.price %></span>
                          <span class="plan-service">/service <br />
                                (commitment <%= subplan.get_committed_sevices %> services)<br /> <%= subplan.get_date_ranges %>
                          </span>
                      </div>
                      <div>
                        <div class="roundedOne">
                          <%= f.radio_button :sub_plan_id_temp, '', :onclick => "set_sub_plan(#{subplan.id}, #{subplan.get_sub_plan_month}, #{subplan.price});", 
                                              id: "plan0#{subplan.id}", data_committed_service: "#{subplan.get_committed_sevices}", data_for: "plan-#{subplan.plan_id}", checked: false %>
                          <label for="plan0<%= subplan.id %>"></label>
                        </div>
                      </div>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      <!-- Tab Holder End--> 
      </div>
      <!--Schedule -->
      <div style="padding-left: 20px;">
        <h1 class="head"> Schedule </h1>
      </div>
      <div class="panel-body">
        <h4>What day of the week is best for service?</h4>
        <div class="col-md-2"> </div>
        <div class="col-md-10">
          <input type="text" id="schedule_day" value="" readonly>
          <%= f.hidden_field :schedule_id, id: "schedule_id" %>
          <div class="margintop-15">
            <% Schedule.all.order("id").each do |schedule| %>
              <a type="button" class="btn btn-bordered-small" onclick="set_schedule(<%= schedule.id %>, this, '<%= schedule.name %>')">
                <%= schedule.name %>
              </a>
            <% end %>
          </div>
        </div>
      </div>
      <!--Schedule End --> 
      <!-- Extra Services-->
      <div class="pane-header">
        <h4> Additional Services </h4>
      </div>
      <div class="panel-body">
        <h4>These services require their own schedule. Some require multiple
            passes and some depend on the season to be scheduled. Set up these by selecting 
            which services you would like added to your plan then fill out the service frequency for each.
        </h4>
        <div class="row">
          <div id="selected_extra_services"></div>  
          <div class="extra-services">
            <div class="white-bg container-fluid">
              <div class="col-md-5 scrollbar" id="content-2">
                <table cellpadding="0" cellspacing="0" class="extra-services-list">
                  <%= f.hidden_field :service_id, id: "service_id", value: Service.first.id %>
                  <% Service.all.each do |service| %>
                    <tr>
                      <td>
                        <div class="roundedOne">
                          <%= f.radio_button :service_id_temp, service.id, class: "service_check", :onclick => "set_service(#{service.id});", type: "checkbox", id: "s#{service.id}" %>
                          <label for="s<%= service.id %>"></label>
                        </div>
                      </td>
                      <td><%= service.service_name %></td>
                      <td id="edit_service"></td>
                    </tr>
                  <% end %>
                </table>
              </div>
              <div class="col-md-7"> 
                <%= render 'subscriptions/extra_services' %>
              </div>
            </div>
          </div>
        </div>
    
        <div class="pane-header">
          <h4> Summary </h4>
        </div>
          <div class="panel-body">
            <h1 class="summary-title">Billing Review</h1>
            <div class="extra-services row">
              <div class="col-md-2"></div>
              <div class="billing-summary col-md-10">
                <div class="col-md-5">
                  <h5>Plan</h5>
                  <p><span id="selected_plan">Weekly</span> Landscaping Plan Minimum <span id="selected_sub_plan_month">1</span> months</p>
                  <h5>Property</h5>
                  <p><span id="area_in_acres_billing"></span> Acres</p>
                </div>
                <div class="col-md-5">
                  <h5>Billing</h5>
                  <table cellpadding="0" cellspacing="0" class="billing-total">
                    <tr>
                      <td>Landscaping Package</td>
                      <%= f.hidden_field :price, id: "landscape_package_price" %>
                      <td id="landscape_package_fee">-</td>
                    </tr>
                    <tr class="border-bottom">
                      <td>Fee</td>
                      <%= f.hidden_field :processing_fee, id: "processing_fee_price", value: 5 %>
                      <td id="processing_fee">$5</td>
                    </tr>
                    <tr>
                      <td class="font-lato-regulor">Today's total</td>
                      <td class="font-lato-regulor" id="total_price">-</td>
                    </tr>
                  </table>
                </div>
              </div>
            </div>
          </div>
          <div class="btn-save-continue"><%= f.submit "SAVE & CONTINUE", style: "border: none;background: #d8d8d8;" %></div>
        </div>
      </div>
  </div>  
<% end %>
<div class="clearfix"></div>

<script type="text/javascript">
  function deleteSelectedShape () {
    if (selectedShape) {
      selectedShape.setMap(null);
      drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);
    }
  } 
  function initialize() {
    var input = document.getElementById('map_address');
    input.value = "";
    document.getElementById("area_in_sq_f").innerHTML = "";
    document.getElementById("area_in_acre").innerHTML = ""; 
    
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 15,
      center: new google.maps.LatLng(40.71, -74.00),
      mapTypeId: google.maps.MapTypeId.HYBRID,
      disableDefaultUI: true,
      zoomControl: true
    });
    var polyOptions = {
      strokeWeight: 0,
      fillOpacity: 0.45,
      editable: true
    };
    // Creates a drawing manager attached to the map that allows the user to draw
    // markers, lines, and shapes.
    drawingManager = new google.maps.drawing.DrawingManager({
      drawingMode: google.maps.drawing.OverlayType.POLYGON,
      markerOptions: {
        draggable: true
      },
      polylineOptions: {
        editable: true
      },
      drawingControlOptions: {
        position: google.maps.ControlPosition.TOP_LEFT  ,
        drawingModes: ['marker', 'polygon', 'polyline']
      },   
      rectangleOptions: polyOptions,
      circleOptions: polyOptions,
      polygonOptions: polyOptions,
      map: map
    });
    google.maps.event.addListener(drawingManager, 'overlaycomplete', function(e) {
      if (e.type != google.maps.drawing.OverlayType.MARKER) {
        // Switch back to non-drawing mode after drawing a shape.
        drawingManager.setDrawingMode(null);
        // Add an event listener that selects the newly-drawn shape when the user
        // mouses down on it.
        var newShape = e.overlay;
        newShape.type = e.type;
        google.maps.event.addListener(newShape, 'click', function() {
          setSelection(newShape);
        });
        var area = google.maps.geometry.spherical.computeArea(newShape.getPath());
        var area_in_sq_m = area.toFixed(2);
        var area_in_sq_f = (area * 10.764).toFixed(2);
        var area_in_acre = (area * 0.00024711).toFixed(2);
        document.getElementById("area_in_sq_f").innerHTML = area_in_sq_f;
        document.getElementById("area_in_acre").innerHTML = area_in_acre;
        $("#subscription_location_attributes_area_in_feet").val(area_in_sq_f);
        $("#subscription_location_attributes_area_in_acres").val(area_in_acre);
        $("#area_in_acres_billing").text(area_in_acre);
        setSelection(newShape);
        calculate_price();
      }
    });
    // Clear the current selection when the drawing mode is changed, or when the
    // map is clicked.
    google.maps.event.addListener(drawingManager, 'drawingmode_changed', clearSelection);
    google.maps.event.addListener(map, 'click', clearSelection);
    google.maps.event.addDomListener(document.getElementById('clear_marker'), 'click', deleteSelectedShape);
    buildColorPalette();
  
    // Create the search box and link it to the UI element.
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    // Bias the SearchBox results towards current map's viewport.
    map.addListener('bounds_changed', function() {
      searchBox.setBounds(map.getBounds());
    });
    var markers = [];
    // Listen for the event fired when the user selects a prediction and retrieve
    // more details for that place.
    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }

      // Clear out the old markers.
      markers.forEach(function(marker) {
        marker.setMap(null);
      });
      markers = [];

      // For each place, get the icon, name and location.
      var bounds = new google.maps.LatLngBounds();
      places.forEach(function(place) {
        if (!place.geometry) {
          console.log("Returned place contains no geometry");
          return;
        }
        var icon = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };
        console.log(place.geometry.location);
        get_address_components(place);
        // Create a marker for each place.
        markers.push(new google.maps.Marker({
          map: map,
          icon: icon,
          title: place.name,
          position: place.geometry.location
        }));
        if (place.geometry.viewport) {
          // Only geocodes have viewport.
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }
      });
      map.fitBounds(bounds);
    });  
  }
  google.maps.event.addDomListener(window, 'load', initialize);
  <%#*google.maps.event.addDomListener(window, 'turbolinks:load', initialize);%>

  $('.left-sidebar li.active').removeClass('active');
  $("li.service_tab").addClass('active'); 
  $("input[type='submit']").removeAttr('data-disable-with');
  
  $( document ).ready(function() {
    $("#s<%= Service.first.id %>").attr("checked", "checked");
    $(".service_<%= Service.first.id %>").show();
    $("#plan_<%= Plan.first.id %>").removeClass("tab");
    $("#plan_<%= Plan.first.id %>").addClass("tab active");
    $("div[subplan_for='<%= Plan.first.id %>']").show();
    $("input#sub-plan-<%= Subplan.first.id %>").attr("checked", "checked");
  });

  $(window).on("load",function(){
      $("#content-1").mCustomScrollbar({
        live:true,
        theme:"minimal"
      });
      $("#content-2").mCustomScrollbar({
        live:true,
        theme:"minimal"
      });
      $("#content-3").mCustomScrollbar({
        theme:"dark",
        axis:'x'
      });
  });
  $(".serviceList").click(function(){
      $(this).closest("div.services-details").find(".serviceList").removeClass("selected")
      $(this).toggleClass("selected");
  });
  $(".servicePlanList").click(function(){
      $(".servicePlanList").removeClass("active");
      $(this).toggleClass("active");
  });   
</script>
</body>
</html>